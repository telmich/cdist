#!/bin/sh

if [ -f "$__object/parameter/pxe" ]; then
    if [ ! -f "$__object/parameter/pxebootdir" ]; then
        echo "ERROR: pxebootdir parameter required for pxe" >&2
        exit 1
    fi
    pxe_boot_dir="$(cat "$__object/parameter/pxebootdir")"
    if [ -z "${pxe_boot_dir}" ] ; then
        echo "ERROR: pxebootdir parameter required for pxe" >&2
        exit 1
    fi
fi
 
target_dir="/$__object_id"
echo target_dir = $target_dir

[ -e "${target_dir}" ] && echo "already exists" && exit 0

############
# bootstrap
if [ -f "$__object/parameter/bootstrap" ]; then
    arch="$(cat "$__object/parameter/arch")"
    suite="$(cat "$__object/parameter/suite")"

    mkdir -p $target_dir
    echo "debootstrap" > $target_dir/debootstrap
    mkdir -p $target_dir/var/lib/cdist
    mkdir -p $target_dir/tmp
    mkdir -p $target_dir/etc
    mkdir -p $target_dir/var/lib/cdist/conf/explorer
    mkdir -p $target_dir/etc/network
    cp /etc/passwd $target_dir/etc/passwd
    mkdir -p ${target_dir}/usr/lib/syslinux
    echo 'pxelinux.0' > ${target_dir}/usr/lib/syslinux/pxelinux.0
fi

#########
# config
if [ -f "$__object/parameter/configure" ]; then
    echo 'preos config'
    cat > ${target_dir}/etc/network/interfaces << eof
# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
allow-hotplug eth0
iface eth0 inet dhcp
eof
    echo "preos post config"
fi

if [ -f "$__object/parameter/pxe" ]; then
    ############
    # create pxe
    # pxe_boot_dir set in check at the begining

    mkdir -p $pxe_boot_dir
    echo "vmlinuz" > ${pxe_boot_dir}/kernel
    echo "initramfs" > ${pxe_boot_dir}/initramfs

    configdir="${pxe_boot_dir}/pxelinux.cfg"
    mkdir -p $configdir
    cat > $configdir/config <<eof
DEFAULT preos
LABEL preos
KERNEL kernel
INITRD initramfs
eof
    cp -L ${target_dir}/usr/lib/syslinux/pxelinux.0 ${pxe_boot_dir}/pxelinux.0
fi

