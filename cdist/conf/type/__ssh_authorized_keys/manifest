#!/bin/sh
#
# 2012-2014 Steven Armstrong (steven-cdist at armstrong.cc)
# 2014 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

owner="$(cat "$__object/parameter/owner" 2>/dev/null || echo "$__object_id")"
state="$(cat "$__object/parameter/state" 2>/dev/null)"
if [ -f "$__object/parameter/file" ]; then
   file="$(cat "$__object/parameter/file")"
else
   home="$(cut -d':' -f 6 "$__object/explorer/passwd")"
   if [ -z "$home" ]; then
      echo "Failed to get home directory from explorer." >&2
      exit 1
   fi
   file="$home/.ssh/authorized_keys"
fi

if [ ! -f "$__object/parameter/noparent" -o ! -f "$__object/parameter/nofile" ]; then
   group="$(cut -d':' -f 1 "$__object/explorer/group")"
   if [ -z "$group" ]; then
      echo "Failed to get owners group from explorer." >&2
      exit 1
   fi

   if [ ! -f "$__object/parameter/noparent" ]; then
      __ssh_dot_ssh "$owner"
      export require="__ssh_dot_ssh/$owner"
   fi
   if [ ! -f "$__object/parameter/nofile" ]; then
      # Ensure that authorized_keys file exists and has the right permissions.
      __file "$file" \
         --owner "$owner" \
         --group "$group" \
         --mode 0600 \
         --state exists
   fi
fi

# Remove legacy blocks created by old versions of this type
# FIXME: remove me in 3.2+
__block "$__object_name" \
   --file "$file" \
   --prefix "#cdist:$__object_name" \
   --suffix "#/cdist:$__object_name" \
   --state 'absent' \
   --text - << DONE
remove legacy block
DONE

_cksum() {
   echo "$1" | cksum | cut -d' ' -f 1
}

while read key; do
   cksum_key="$(_cksum "$key")"
   line_id="${owner}-${cksum_key}"

   set -- "$line_id"
   set -- "$@" --file "$file"
   set -- "$@" --regex ".*$key.*"
   if [ "$state" = 'present' ]; then
      set -- "$@" --line "$key"
   fi
   set -- "$@" --state "$state"
   # Ensure __line does not read stdin
   require="__block/$__object_name" __line "$@" < /dev/null
done < "$__object/parameter/key"
