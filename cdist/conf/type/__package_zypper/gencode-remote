#!/bin/sh
#
# 2012 Nico Schottelius (nico-cdist at schottelius.org)
# 2013 Daniel Heule (hda at sfs.biz)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
#
# Manage packages with Zypper (mostly suse)
#

# Debug
# exec >&2
# set -x

globalopts="--quiet --non-interactive"

if [ -f "$__object/parameter/name" ]; then
    name="$__object/parameter/name"
else
    name="$__object_id"
fi

if [ -f "$__object/parameter/state" ]; then
    state_should="$(cat "$__object/parameter/state")"
else
    state_should="present"
fi

if [ -f "$__object/parameter/ptype" ]; then
    ptype="$(cat "$__object/parameter/ptype")"
else
    ptype="package"
fi

if [ -f "$__object/parameter/version" ]; then
    version_should="$(cat "$__object/parameter/version")"
    if [ "$ptype" != "package" ]; then
        echo "version support only for type package implemented" >&2
        exit 2
    fi
else
    version_should=""
fi

pkg_version="$(cat "$__object/explorer/pkg_version")"
if [ -z "$pkg_version" ]; then
    state_is="absent"
    version_is=""
else
    state_is="present"
    version_is=${pkg_version##* }
fi


case "$state_should" in
    present)
        if [ -z "$version_should" ]; then
            [ "$state_is" = "present" ] && exit 0 # if state is present, we dont need to do anything
            echo zypper $globalopts install --type \"$ptype\" --auto-agree-with-licenses \"$name\" ">/dev/null"
        else
            [ "$state_is" = "present" ] && [ "$version_should" = "$version_is" ] && exit 0 # if state is present and version is correct, we dont need to do anything
            echo zypper $globalopts install --oldpackage --type \"$ptype\" --auto-agree-with-licenses \"$name\" = \"$version_should\" ">/dev/null"
        fi
    ;;
    absent)
        [ "$state_is" = "absent" ] && exit 0 # if state is absent, we dont need to do anything
        echo zypper $globalopts remove --type \"$ptype\" \"$name\" ">/dev/null"
    ;;
    *)
        echo "Unknown state: $state_should" >&2
        exit 1
    ;;
esac
