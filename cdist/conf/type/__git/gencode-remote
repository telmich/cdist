#!/bin/sh
#
# 2012 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
#

state_is="$(cat "$__object/explorer/state")"
owner_is="$(cat "$__object/explorer/owner")"
group_is="$(cat "$__object/explorer/group")"

state_should=present
[ -f "$__object/parameter/state" ] && state_should="$(cat "$__object/parameter/state")"

branch=master
[ -f "$__object/parameter/branch" ] && branch="$(cat "$__object/parameter/branch")"

source="$(cat "$__object/parameter/source")"

destination="/$__object_id"

owner=""
[ -f "$__object/parameter/owner" ] && owner="$(cat "$__object/parameter/owner")"
group=""
[ -f "$__object/parameter/group" ] && group="$(cat "$__object/parameter/group")"
mode=""
[ -f "$__object/parameter/mode" ] && mode="$(cat "$__object/parameter/mode")"

[  "$state_should" = "$state_is" -a \
   "$owner" = "$owner_is" -a \
   "$group" = "$group_is" -a \
   -n "$mode" ] && exit 0

case $state_should in
    present)

        if [ "$state_should" != "$state_is" ]; then
            echo git clone --quiet --branch "$branch" "$source" "$destination"
        fi
        if [ \( -n "$owner" -a "$owner_is" != "$owner" \) -o \
             \( -n "$group" -a "$group_is" != "$group" \) ]; then
            echo chown -R "${owner}:${group}" "$destination"
        fi
        if [ -n "$mode" ]; then
            echo chmod -R "$mode" "$destination"
        fi
    ;;
    # Handled in manifest
    absent)
    ;;

    *)
        echo "Unknown state: $state_should" >&2
        exit 1
    ;;
esac
