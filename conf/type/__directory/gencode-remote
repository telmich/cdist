#!/bin/sh
#
# 2011 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

destination="/$__object_id"
state_should="$(cat "$__object/parameter/state")"

case "$state_should" in
   present)
      # Include parent directories?
      if [ -f "$__object/parameter/parents" ]; then
         parents="$(cat "$__object/parameter/parents")"
         if [ yes = "$parents" ]; then
            mkdiropt="-p"
         else
            mkdiropt=""
         fi
      fi

      if [ -f "$__object/parameter/recursive" ]; then
         if [ yes = "$(cat "$__object/parameter/recursive")" ]; then
            recursive="-R"
         fi
      fi

      # Only create if not already existent
      if [ no = "$(cat "$__object/explorer/exists")" ]; then
         echo mkdir $mkdiropt \"$destination\"
      fi

      # Mode settings
      if [ -f "$__object/parameter/mode" ]; then
         echo chmod \"$(cat "$__object/parameter/mode")\" \"$destination\"
      fi

      # Group
      if [ -f "$__object/parameter/group" ]; then
         echo chgrp $recursive \"$(cat "$__object/parameter/group")\" \"$destination\"
      fi

      # Owner
      if [ -f "$__object/parameter/owner" ]; then
         echo chown $recursive \"$(cat "$__object/parameter/owner")\" \"$destination\"
      fi
   ;;
   absent)
      # Only delete if it exists
      if [ yes = "$(cat "$__object/explorer/exists")" ]; then
         echo rm -rf \"$destination\"
      fi

   ;;
   *)
      echo "Unknown state: $state_should" >&2
      exit 1
   ;;
esac
